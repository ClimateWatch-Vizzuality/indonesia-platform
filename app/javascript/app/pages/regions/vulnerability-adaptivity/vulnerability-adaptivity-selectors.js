import { createStructuredSelector, createSelector } from 'reselect';
import capitalize from 'lodash/capitalize';
import get from 'lodash/get';
import meanBy from 'lodash/meanBy';
import { getProvince } from 'selectors/provinces-selectors';
import { getTranslate } from 'selectors/translation-selectors';

const VULNERABILITY_CLASS_INDICATOR = 'Adap_12';
const ACI_INDICATORS = [ 'Adap_2', 'Adap_3', 'Adap_7', 'Adap_10' ];
const SEI_INDICATORS = [ 'Adap_2', 'Adap_3', 'Adap_4', 'Adap_5', 'Adap_1' ];

const getIndicators = ({ indicators }) => indicators && indicators.data;
const getProvinceIndicators = createSelector([ getProvince, getIndicators ], (
  provinceISO,
  indicators
) =>
  {
    if (!provinceISO || !indicators) return null;

    return {
      indicators: indicators.indicators,
      values: (indicators.values || []).filter(
        ind => ind.location_iso_code3 === provinceISO
      )
    };
  });

const getVulnerabilityClassIndicators = createSelector(
  [ getProvinceIndicators ],
  indicators =>
    indicators &&
      indicators.values &&
      indicators.values.filter(
        ind => ind.indicator_code === VULNERABILITY_CLASS_INDICATOR
      )
);

const getVulnerabilityClass = createSelector(
  [ getVulnerabilityClassIndicators ],
  indicators => {
    if (!indicators || !indicators.length) return null;

    const indicator = indicators[0];

    return get(indicator, 'values[0].value');
  }
);

const getRadarChartDataSelector = selectedIndicators =>
  createSelector([ getProvinceIndicators ], indicators => {
    const values = indicators.values
      .filter(ind => selectedIndicators.includes(ind.indicator_code))
      .map(ind => ({
        indicatorName: capitalize(
          indicators.indicators.find(i => i.code === ind.indicator_code).name
        ),
        value: ind.values[0].value
      }));
    const index = meanBy(values, 'value').toFixed(2);

    return { index, values };
  });

export const getVulnerabilityAdaptivityData = createStructuredSelector({
  t: getTranslate,
  aci: getRadarChartDataSelector(ACI_INDICATORS),
  sei: getRadarChartDataSelector(SEI_INDICATORS),
  vulnerabilityClass: getVulnerabilityClass
});
