import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import {
  Radar,
  RadarChart,
  PolarGrid,
  ResponsiveContainer,
  PolarAngleAxis,
  PolarRadiusAxis,
  Tooltip
} from 'recharts';

import { Dropdown } from 'cw-components';
import IndicatorsProvider from 'providers/indicators-provider';
import SectionTitle from 'components/section-title';
import InfoDownloadToolbox from 'components/info-download-toolbox';

import styles from './vulnerability-adaptivity-styles.scss';

const namespace = 'pages.regions.vulnerability-adaptivity';

const COLORS = { aci: '#FC7E4B', sei: '#0845CB' };

class VulnerabilityAdaptivity extends PureComponent {
  handleYearChange = selected => {
    const { onFilterChange } = this.props;
    onFilterChange({ year: selected.value });
  };

  renderVulnerabilityClass() {
    const { vulnerabilityClassIndicator } = this.props;
    const { indicatorName, value } = vulnerabilityClassIndicator;

    return (
      <div className={styles.vulnerabilityClass}>
        {indicatorName}: {value}
      </div>
    );
  }

  renderBox(indexName) {
    const { indexData, selectedYear, t } = this.props;
    const index = indexData[indexName] || {};
    const dataFrom = `${t(`${namespace}.data-from`)} ${selectedYear &&
      selectedYear.value}`;
    const color = COLORS[indexName];

    return (
      <div className={styles.box}>
        <div className={styles.boxHeader}>
          {index.indexName}
        </div>
        <div className={styles.boxBody}>
          <ResponsiveContainer aspect={3 / 2}>
            <RadarChart
              data={index.values}
              outerRadius="70%"
              className={styles.radarChart}
            >
              <PolarGrid gridType="circle" />
              <PolarAngleAxis dataKey="indicatorName" />
              <PolarRadiusAxis
                domain={[ 0, 1 ]}
                tick={false}
                axisLine={false}
              />
              <Radar
                name="Index"
                dataKey="value"
                fill={color}
                fillOpacity={0.8}
                activeDot={false}
              />
              <Tooltip cursor={false} />
            </RadarChart>
          </ResponsiveContainer>
        </div>
        <div className={styles.boxFooter}>
          <div className={styles.indexValue}>
            {indexName.toUpperCase()}: {index.index}
          </div>
          <div className={styles.indexDate}>
            {dataFrom}
          </div>
        </div>
      </div>
    );
  }

  render() {
    const { years, selectedYear, sources, downloadURI, t } = this.props;

    return (
      <div className={styles.page}>
        <SectionTitle
          title={t(`${namespace}.header`)}
          description={t(`${namespace}.description`)}
        />
        <h2>{t(`${namespace}.sub-header`)}</h2>
        <div className={styles.toolbox}>
          <div className={styles.dropdown}>
            <Dropdown
              key="year"
              label="Year"
              options={years}
              onValueChange={this.handleYearChange}
              value={selectedYear}
              hideResetButton
            />
          </div>
          <InfoDownloadToolbox
            className={{ buttonWrapper: styles.buttonWrapper }}
            slugs={sources}
            downloadUri={downloadURI}
          />
        </div>
        {this.renderVulnerabilityClass()}
        <div className={styles.container}>
          {this.renderBox('sei')}
          {this.renderBox('aci')}
        </div>
        <IndicatorsProvider />
      </div>
    );
  }
}

VulnerabilityAdaptivity.propTypes = {
  t: PropTypes.func.isRequired,
  indexData: PropTypes.object.isRequired,
  years: PropTypes.array,
  selectedYear: PropTypes.object,
  vulnerabilityClassIndicator: PropTypes.shape({
    indicatorName: PropTypes.string,
    value: PropTypes.string
  }),
  sources: PropTypes.array,
  downloadURI: PropTypes.string,
  onFilterChange: PropTypes.func.isRequired
};

VulnerabilityAdaptivity.defaultProps = {
  years: [],
  selectedYear: null,
  vulnerabilityClassIndicator: {},
  sources: [],
  downloadURI: ''
};

export default VulnerabilityAdaptivity;
